
 /----------------------------------------------------------------------------\
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |  Copyright (C) 2012 - 2025  Claire Xenia Wolf <claire@yosyshq.com>         |
 |  Distributed under an ISC-like license, type "license" to see terms        |
 \----------------------------------------------------------------------------/
 Yosys 0.50+7 (git sha1 38f858374, clang++ 18.1.8 -fPIC -O3)

-- Running command `verilog_defaults -add -I./' --

-- Running command `read_verilog -sv top.sv adc_capture.sv' --

1. Executing Verilog-2005 frontend: top.sv
Parsing SystemVerilog input from `top.sv' to AST representation.
Generating RTLIL representation for module `\top'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: adc_capture.sv
Parsing SystemVerilog input from `adc_capture.sv' to AST representation.
Generating RTLIL representation for module `\adc_capture'.
Successfully finished Verilog frontend.

-- Running command `synth_ecp5 -noabc9 -json adc_capture.json -top top' --

3. Executing SYNTH_ECP5 pass.

3.1. Executing Verilog-2005 frontend: /home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v
Parsing Verilog input from `/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\LUT4'.
Generating RTLIL representation for module `\$__ABC9_LUT5'.
Generating RTLIL representation for module `\$__ABC9_LUT6'.
Generating RTLIL representation for module `\$__ABC9_LUT7'.
Generating RTLIL representation for module `\L6MUX21'.
Generating RTLIL representation for module `\CCU2C'.
Generating RTLIL representation for module `\TRELLIS_RAM16X2'.
Generating RTLIL representation for module `\PFUMX'.
Generating RTLIL representation for module `\TRELLIS_DPR16X4'.
Generating RTLIL representation for module `\DPR16X4C'.
Generating RTLIL representation for module `\LUT2'.
Generating RTLIL representation for module `\TRELLIS_FF'.
Generating RTLIL representation for module `\TRELLIS_IO'.
Generating RTLIL representation for module `\INV'.
Generating RTLIL representation for module `\TRELLIS_COMB'.
Generating RTLIL representation for module `\DP16KD'.
Generating RTLIL representation for module `\FD1P3AX'.
Generating RTLIL representation for module `\FD1P3AY'.
Generating RTLIL representation for module `\FD1P3BX'.
Generating RTLIL representation for module `\FD1P3DX'.
Generating RTLIL representation for module `\FD1P3IX'.
Generating RTLIL representation for module `\FD1P3JX'.
Generating RTLIL representation for module `\FD1S3AX'.
Generating RTLIL representation for module `\FD1S3AY'.
Generating RTLIL representation for module `\FD1S3BX'.
Generating RTLIL representation for module `\FD1S3DX'.
Generating RTLIL representation for module `\FD1S3IX'.
Generating RTLIL representation for module `\FD1S3JX'.
Generating RTLIL representation for module `\IFS1P3BX'.
Generating RTLIL representation for module `\IFS1P3DX'.
Generating RTLIL representation for module `\IFS1P3IX'.
Generating RTLIL representation for module `\IFS1P3JX'.
Generating RTLIL representation for module `\OFS1P3BX'.
Generating RTLIL representation for module `\OFS1P3DX'.
Generating RTLIL representation for module `\OFS1P3IX'.
Generating RTLIL representation for module `\OFS1P3JX'.
Generating RTLIL representation for module `\IB'.
Generating RTLIL representation for module `\IBPU'.
Generating RTLIL representation for module `\IBPD'.
Generating RTLIL representation for module `\OB'.
Generating RTLIL representation for module `\OBZ'.
Generating RTLIL representation for module `\OBZPU'.
Generating RTLIL representation for module `\OBZPD'.
Generating RTLIL representation for module `\OBCO'.
Generating RTLIL representation for module `\BB'.
Generating RTLIL representation for module `\BBPU'.
Generating RTLIL representation for module `\BBPD'.
Generating RTLIL representation for module `\ILVDS'.
Generating RTLIL representation for module `\OLVDS'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_bb.v
Parsing Verilog input from `/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_bb.v' to AST representation.
Generating RTLIL representation for module `\MULT18X18D'.
Generating RTLIL representation for module `\ALU54B'.
Generating RTLIL representation for module `\EHXPLLL'.
Generating RTLIL representation for module `\DTR'.
Generating RTLIL representation for module `\OSCG'.
Generating RTLIL representation for module `\USRMCLK'.
Generating RTLIL representation for module `\JTAGG'.
Generating RTLIL representation for module `\DELAYF'.
Generating RTLIL representation for module `\DELAYG'.
Generating RTLIL representation for module `\IDDRX1F'.
Generating RTLIL representation for module `\IDDRX2F'.
Generating RTLIL representation for module `\IDDR71B'.
Generating RTLIL representation for module `\IDDRX2DQA'.
Generating RTLIL representation for module `\ODDRX1F'.
Generating RTLIL representation for module `\ODDRX2F'.
Generating RTLIL representation for module `\ODDR71B'.
Generating RTLIL representation for module `\OSHX2A'.
Generating RTLIL representation for module `\ODDRX2DQA'.
Generating RTLIL representation for module `\ODDRX2DQSB'.
Generating RTLIL representation for module `\TSHX2DQA'.
Generating RTLIL representation for module `\TSHX2DQSA'.
Generating RTLIL representation for module `\DQSBUFM'.
Generating RTLIL representation for module `\DDRDLLA'.
Generating RTLIL representation for module `\DLLDELD'.
Generating RTLIL representation for module `\CLKDIVF'.
Generating RTLIL representation for module `\ECLKSYNCB'.
Generating RTLIL representation for module `\ECLKBRIDGECS'.
Generating RTLIL representation for module `\DCCA'.
Generating RTLIL representation for module `\DCSC'.
Generating RTLIL representation for module `\DCUA'.
Generating RTLIL representation for module `\EXTREFB'.
Generating RTLIL representation for module `\PCSCLKDIV'.
Generating RTLIL representation for module `\PUR'.
Generating RTLIL representation for module `\GSR'.
Generating RTLIL representation for module `\SGSR'.
Generating RTLIL representation for module `\PDPW16KD'.
Successfully finished Verilog frontend.

3.3. Executing HIERARCHY pass (managing design hierarchy).

3.3.1. Analyzing design hierarchy..
Top module:  \top
Used module:     \adc_capture
Parameter \clk_hz = 25000000
Parameter \sclk_hz = 500000
Parameter \cycle_pause = 30

3.3.2. Executing AST frontend in derive mode using pre-parsed AST for module `\adc_capture'.
Parameter \clk_hz = 25000000
Parameter \sclk_hz = 500000
Parameter \cycle_pause = 30
Generating RTLIL representation for module `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture'.

3.3.3. Analyzing design hierarchy..
Top module:  \top
Used module:     $paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture

3.3.4. Analyzing design hierarchy..
Top module:  \top
Used module:     $paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture
Removing unused module `\adc_capture'.
Removed 1 unused modules.

3.4. Executing PROC pass (convert processes to netlists).

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\TRELLIS_DPR16X4.$proc$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:213$139'.
Cleaned up 1 empty switch.

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:350$246 in module TRELLIS_FF.
Marked 1 switch rules as full_case in process $proc$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:285$198 in module DPR16X4C.
Marked 1 switch rules as full_case in process $proc$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:221$140 in module TRELLIS_DPR16X4.
Marked 5 switch rules as full_case in process $proc$adc_capture.sv:66$260 in module $paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.
Marked 1 switch rules as full_case in process $proc$adc_capture.sv:51$255 in module $paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.
Marked 2 switch rules as full_case in process $proc$adc_capture.sv:24$248 in module $paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.
Marked 1 switch rules as full_case in process $proc$top.sv:0$3 in module top.
Marked 1 switch rules as full_case in process $proc$top.sv:65$1 in module top.
Removed a total of 0 dead cases.

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 2 redundant assignments.
Promoted 43 assignments to connections.

3.4.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\TRELLIS_FF.$proc$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$247'.
  Set init value: \Q = 1'0

3.4.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \rst in `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.$proc$adc_capture.sv:66$260'.
Found async reset \rst in `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.$proc$adc_capture.sv:51$255'.
Found async reset \rst in `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.$proc$adc_capture.sv:24$248'.
Found async reset \rst in `\top.$proc$top.sv:65$1'.

3.4.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~16 debug messages>

3.4.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\TRELLIS_FF.$proc$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$247'.
Creating decoders for process `\TRELLIS_FF.$proc$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:350$246'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DPR16X4C.$proc$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$221'.
Creating decoders for process `\DPR16X4C.$proc$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:285$198'.
     1/3: $1$memwr$\ram$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:287$197_EN[3:0]$204
     2/3: $1$memwr$\ram$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:287$197_DATA[3:0]$203
     3/3: $1$memwr$\ram$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:287$197_ADDR[3:0]$202
Creating decoders for process `\TRELLIS_DPR16X4.$proc$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$164'.
Creating decoders for process `\TRELLIS_DPR16X4.$proc$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:221$140'.
     1/3: $1$memwr$\mem$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:223$138_EN[3:0]$146
     2/3: $1$memwr$\mem$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:223$138_DATA[3:0]$145
     3/3: $1$memwr$\mem$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:223$138_ADDR[3:0]$144
Creating decoders for process `\TRELLIS_DPR16X4.$proc$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:213$139'.
Creating decoders for process `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.$proc$adc_capture.sv:66$260'.
     1/5: $0\cs_pause[4:0]
     2/5: $0\cs_reg[4:0]
     3/5: $0\dout[15:0]
     4/5: $0\adc_ready[0:0]
     5/5: $0\cs[0:0]
Creating decoders for process `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.$proc$adc_capture.sv:51$255'.
     1/2: $0\din[7:0]
     2/2: $0\din_bit[0:0]
Creating decoders for process `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.$proc$adc_capture.sv:24$248'.
     1/3: $0\frdiv[4:0]
     2/3: $0\clk2[0:0]
     3/3: $0\sclk[0:0]
Creating decoders for process `\top.$proc$top.sv:0$3'.
     1/1: $1\led[3:0]
Creating decoders for process `\top.$proc$top.sv:65$1'.
     1/3: $0\address[2:0]
     2/3: $0\adc_ack[0:0]
     3/3: $0\en[0:0]

3.4.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\top.\led' from process `\top.$proc$top.sv:0$3'.

3.4.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\TRELLIS_FF.\Q' using process `\TRELLIS_FF.$proc$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:350$246'.
  created $dff cell `$procdff$370' with positive edge clock.
Creating register for signal `\DPR16X4C.\i' using process `\DPR16X4C.$proc$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$221'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:281$182_EN' using process `\DPR16X4C.$proc$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$221'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:281$183_EN' using process `\DPR16X4C.$proc$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$221'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:281$184_EN' using process `\DPR16X4C.$proc$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$221'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:281$185_EN' using process `\DPR16X4C.$proc$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$221'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:281$186_EN' using process `\DPR16X4C.$proc$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$221'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:281$187_EN' using process `\DPR16X4C.$proc$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$221'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:281$188_EN' using process `\DPR16X4C.$proc$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$221'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:281$189_EN' using process `\DPR16X4C.$proc$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$221'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:281$190_EN' using process `\DPR16X4C.$proc$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$221'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:281$191_EN' using process `\DPR16X4C.$proc$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$221'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:281$192_EN' using process `\DPR16X4C.$proc$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$221'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:281$193_EN' using process `\DPR16X4C.$proc$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$221'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:281$194_EN' using process `\DPR16X4C.$proc$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$221'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:281$195_EN' using process `\DPR16X4C.$proc$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$221'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:281$196_EN' using process `\DPR16X4C.$proc$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$221'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:287$197_ADDR' using process `\DPR16X4C.$proc$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:285$198'.
  created $dff cell `$procdff$371' with positive edge clock.
Creating register for signal `\DPR16X4C.$memwr$\ram$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:287$197_DATA' using process `\DPR16X4C.$proc$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:285$198'.
  created $dff cell `$procdff$372' with positive edge clock.
Creating register for signal `\DPR16X4C.$memwr$\ram$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:287$197_EN' using process `\DPR16X4C.$proc$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:285$198'.
  created $dff cell `$procdff$373' with positive edge clock.
Creating register for signal `\TRELLIS_DPR16X4.\i' using process `\TRELLIS_DPR16X4.$proc$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$164'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:207$122_EN' using process `\TRELLIS_DPR16X4.$proc$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$164'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:207$123_EN' using process `\TRELLIS_DPR16X4.$proc$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$164'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:207$124_EN' using process `\TRELLIS_DPR16X4.$proc$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$164'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:207$125_EN' using process `\TRELLIS_DPR16X4.$proc$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$164'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:207$126_EN' using process `\TRELLIS_DPR16X4.$proc$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$164'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:207$127_EN' using process `\TRELLIS_DPR16X4.$proc$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$164'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:207$128_EN' using process `\TRELLIS_DPR16X4.$proc$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$164'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:207$129_EN' using process `\TRELLIS_DPR16X4.$proc$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$164'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:207$130_EN' using process `\TRELLIS_DPR16X4.$proc$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$164'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:207$131_EN' using process `\TRELLIS_DPR16X4.$proc$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$164'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:207$132_EN' using process `\TRELLIS_DPR16X4.$proc$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$164'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:207$133_EN' using process `\TRELLIS_DPR16X4.$proc$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$164'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:207$134_EN' using process `\TRELLIS_DPR16X4.$proc$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$164'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:207$135_EN' using process `\TRELLIS_DPR16X4.$proc$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$164'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:207$136_EN' using process `\TRELLIS_DPR16X4.$proc$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$164'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:207$137_EN' using process `\TRELLIS_DPR16X4.$proc$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$164'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:223$138_ADDR' using process `\TRELLIS_DPR16X4.$proc$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:221$140'.
  created $dff cell `$procdff$374' with positive edge clock.
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:223$138_DATA' using process `\TRELLIS_DPR16X4.$proc$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:221$140'.
  created $dff cell `$procdff$375' with positive edge clock.
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:223$138_EN' using process `\TRELLIS_DPR16X4.$proc$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:221$140'.
  created $dff cell `$procdff$376' with positive edge clock.
Creating register for signal `\TRELLIS_DPR16X4.\muxwre' using process `\TRELLIS_DPR16X4.$proc$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:213$139'.
  created direct connection (no actual register cell created).
Creating register for signal `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.\cs' using process `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.$proc$adc_capture.sv:66$260'.
  created $adff cell `$procdff$379' with positive edge clock and positive level reset.
Creating register for signal `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.\adc_ready' using process `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.$proc$adc_capture.sv:66$260'.
  created $adff cell `$procdff$382' with positive edge clock and positive level reset.
Creating register for signal `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.\dout' using process `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.$proc$adc_capture.sv:66$260'.
  created $adff cell `$procdff$385' with positive edge clock and positive level reset.
Creating register for signal `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.\cs_reg' using process `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.$proc$adc_capture.sv:66$260'.
  created $adff cell `$procdff$388' with positive edge clock and positive level reset.
Creating register for signal `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.\cs_pause' using process `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.$proc$adc_capture.sv:66$260'.
  created $adff cell `$procdff$391' with positive edge clock and positive level reset.
Creating register for signal `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.\din_bit' using process `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.$proc$adc_capture.sv:51$255'.
  created $adff cell `$procdff$394' with negative edge clock and positive level reset.
Creating register for signal `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.\din' using process `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.$proc$adc_capture.sv:51$255'.
  created $adff cell `$procdff$397' with negative edge clock and positive level reset.
Creating register for signal `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.\sclk' using process `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.$proc$adc_capture.sv:24$248'.
  created $adff cell `$procdff$400' with positive edge clock and positive level reset.
Creating register for signal `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.\frdiv' using process `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.$proc$adc_capture.sv:24$248'.
  created $adff cell `$procdff$403' with positive edge clock and positive level reset.
Creating register for signal `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.\clk2' using process `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.$proc$adc_capture.sv:24$248'.
  created $adff cell `$procdff$406' with positive edge clock and positive level reset.
Creating register for signal `\top.\en' using process `\top.$proc$top.sv:65$1'.
  created $adff cell `$procdff$409' with positive edge clock and positive level reset.
Creating register for signal `\top.\adc_ack' using process `\top.$proc$top.sv:65$1'.
  created $adff cell `$procdff$412' with positive edge clock and positive level reset.
Creating register for signal `\top.\address' using process `\top.$proc$top.sv:65$1'.
  created $adff cell `$procdff$415' with positive edge clock and positive level reset.

3.4.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

3.4.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `TRELLIS_FF.$proc$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$247'.
Found and cleaned up 2 empty switches in `\TRELLIS_FF.$proc$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:350$246'.
Removing empty process `TRELLIS_FF.$proc$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:350$246'.
Removing empty process `DPR16X4C.$proc$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$221'.
Found and cleaned up 1 empty switch in `\DPR16X4C.$proc$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:285$198'.
Removing empty process `TRELLIS_DPR16X4.$proc$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$164'.
Found and cleaned up 1 empty switch in `\TRELLIS_DPR16X4.$proc$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:221$140'.
Removing empty process `TRELLIS_DPR16X4.$proc$/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:213$139'.
Found and cleaned up 6 empty switches in `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.$proc$adc_capture.sv:66$260'.
Removing empty process `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.$proc$adc_capture.sv:66$260'.
Found and cleaned up 2 empty switches in `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.$proc$adc_capture.sv:51$255'.
Removing empty process `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.$proc$adc_capture.sv:51$255'.
Found and cleaned up 2 empty switches in `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.$proc$adc_capture.sv:24$248'.
Removing empty process `$paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.$proc$adc_capture.sv:24$248'.
Found and cleaned up 1 empty switch in `\top.$proc$top.sv:0$3'.
Removing empty process `top.$proc$top.sv:0$3'.
Found and cleaned up 1 empty switch in `\top.$proc$top.sv:65$1'.
Removing empty process `top.$proc$top.sv:65$1'.
Cleaned up 16 empty switches.

3.4.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.
<suppressed ~24 debug messages>
Optimizing module top.
<suppressed ~3 debug messages>

3.5. Executing FLATTEN pass (flatten design).
Deleting now unused module $paramod$88e6312d129145fdfa4a5918d09839336084df25\adc_capture.
<suppressed ~1 debug messages>

3.6. Executing TRIBUF pass.

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 4 unused cells and 62 unused wires.
<suppressed ~6 debug messages>

3.10. Executing CHECK pass (checking for obvious problems).
Checking module top...
Found and reported 0 problems.

3.11. Executing OPT pass (performing simple optimizations).

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $flatten\adc_capture_inst.$procmux$320: \adc_capture_inst.adc_ready -> 1'1
      Replacing known input bits on port B of cell $flatten\adc_capture_inst.$procmux$327: \adc_capture_inst.adc_ready -> 1'0
      Replacing known input bits on port A of cell $flatten\adc_capture_inst.$procmux$325: \adc_capture_inst.adc_ready -> 1'0
      Replacing known input bits on port A of cell $flatten\adc_capture_inst.$procmux$335: \adc_capture_inst.cs -> 1'1
      Replacing known input bits on port A of cell $flatten\adc_capture_inst.$procmux$339: \adc_capture_inst.cs -> 1'0
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~11 debug messages>

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Handling D = Q on $procdff$415 ($adff) from module top (removing D path).
Handling D = Q on $procdff$412 ($adff) from module top (removing D path).
Setting constant 0-bit at position 0 on $procdff$412 ($dlatch) from module top.
Setting constant 0-bit at position 0 on $flatten\adc_capture_inst.$procdff$397 ($adff) from module top.
Setting constant 0-bit at position 1 on $flatten\adc_capture_inst.$procdff$397 ($adff) from module top.
Setting constant 0-bit at position 2 on $flatten\adc_capture_inst.$procdff$397 ($adff) from module top.
Setting constant 0-bit at position 6 on $flatten\adc_capture_inst.$procdff$397 ($adff) from module top.
Setting constant 0-bit at position 7 on $flatten\adc_capture_inst.$procdff$397 ($adff) from module top.
Setting constant 0-bit at position 0 on $procdff$415 ($dlatch) from module top.
Setting constant 0-bit at position 1 on $procdff$415 ($dlatch) from module top.
Setting constant 0-bit at position 2 on $procdff$415 ($dlatch) from module top.

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1 debug messages>

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~12 debug messages>

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$417 ($adff) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$417 ($adff) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$417 ($adff) from module top.

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.11.16. Rerunning OPT passes. (Maybe there is more to do..)

3.11.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~12 debug messages>

3.11.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

3.11.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

3.11.20. Executing OPT_DFF pass (perform DFF optimizations).

3.11.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

3.11.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.11.23. Finished OPT passes. (There is nothing left to do.)

3.12. Executing FSM pass (extract and optimize FSM).

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

3.13. Executing OPT pass (performing simple optimizations).

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~12 debug messages>

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $procdff$409 ($adff) from module top (D = 1'0, Q = \en).
Adding EN signal on $flatten\adc_capture_inst.$procdff$406 ($adff) from module top (D = $flatten\adc_capture_inst.$not$adc_capture.sv:32$250_Y, Q = \adc_capture_inst.clk2).
Adding EN signal on $flatten\adc_capture_inst.$procdff$400 ($adff) from module top (D = $flatten\adc_capture_inst.$not$adc_capture.sv:34$252_Y, Q = \adc_capture_inst.sclk).
Adding EN signal on $flatten\adc_capture_inst.$procdff$394 ($adff) from module top (D = $flatten\adc_capture_inst.$shiftx$adc_capture.sv:0$259_Y, Q = \adc_capture_inst.din_bit).
Adding EN signal on $flatten\adc_capture_inst.$procdff$391 ($adff) from module top (D = $flatten\adc_capture_inst.$procmux$292_Y, Q = \adc_capture_inst.cs_pause).
Adding EN signal on $flatten\adc_capture_inst.$procdff$388 ($adff) from module top (D = $flatten\adc_capture_inst.$procmux$304_Y, Q = \adc_capture_inst.cs_reg).
Adding EN signal on $flatten\adc_capture_inst.$procdff$385 ($adff) from module top (D = { \adc_capture_inst.dout [14:0] \adc_spi_miso }, Q = \adc_capture_inst.dout).
Adding EN signal on $flatten\adc_capture_inst.$procdff$382 ($adff) from module top (D = $flatten\adc_capture_inst.$procmux$329_Y, Q = \adc_capture_inst.adc_ready).
Adding EN signal on $flatten\adc_capture_inst.$procdff$379 ($adff) from module top (D = $flatten\adc_capture_inst.$procmux$341_Y, Q = \adc_capture_inst.cs).

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 18 unused cells and 18 unused wires.
<suppressed ~19 debug messages>

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.13.9. Rerunning OPT passes. (Maybe there is more to do..)

3.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

3.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

3.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~21 debug messages>
Removed a total of 7 cells.

3.13.13. Executing OPT_DFF pass (perform DFF optimizations).

3.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 7 unused wires.
<suppressed ~1 debug messages>

3.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.13.16. Rerunning OPT passes. (Maybe there is more to do..)

3.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

3.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

3.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

3.13.20. Executing OPT_DFF pass (perform DFF optimizations).

3.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

3.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.13.23. Finished OPT passes. (There is nothing left to do.)

3.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 2 bits (of 3) from port B of cell top.$procmux$365_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$procmux$366_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$procmux$367_CMP0 ($eq).
Removed top 1 bits (of 16) from FF cell top.$auto$ff.cc:266:slice$442 ($adffe).
Removed top 31 bits (of 32) from port B of cell top.$flatten\adc_capture_inst.$add$adc_capture.sv:101$266 ($add).
Removed top 27 bits (of 32) from port Y of cell top.$flatten\adc_capture_inst.$add$adc_capture.sv:101$266 ($add).
Removed top 27 bits (of 32) from port B of cell top.$flatten\adc_capture_inst.$ge$adc_capture.sv:96$265 ($ge).
Removed top 4 bits (of 5) from port B of cell top.$flatten\adc_capture_inst.$add$adc_capture.sv:91$264 ($add).
Removed top 1 bits (of 5) from port B of cell top.$flatten\adc_capture_inst.$eq$adc_capture.sv:85$263 ($eq).
Removed top 2 bits (of 5) from port A of cell top.$flatten\adc_capture_inst.$sub$adc_capture.sv:60$258 ($sub).
Removed top 28 bits (of 32) from port B of cell top.$flatten\adc_capture_inst.$lt$adc_capture.sv:59$257 ($lt).
Removed top 20 bits (of 32) from port A of cell top.$flatten\adc_capture_inst.$sub$adc_capture.sv:46$254 ($sub).
Removed top 20 bits (of 32) from port Y of cell top.$flatten\adc_capture_inst.$sub$adc_capture.sv:46$254 ($sub).
Removed top 31 bits (of 32) from port B of cell top.$flatten\adc_capture_inst.$add$adc_capture.sv:38$253 ($add).
Removed top 27 bits (of 32) from port Y of cell top.$flatten\adc_capture_inst.$add$adc_capture.sv:38$253 ($add).
Removed top 27 bits (of 32) from port B of cell top.$flatten\adc_capture_inst.$ge$adc_capture.sv:31$249 ($ge).
Removed top 1 bits (of 15) from FF cell top.$auto$ff.cc:266:slice$442 ($adffe).
Removed top 1 bits (of 14) from FF cell top.$auto$ff.cc:266:slice$442 ($adffe).
Removed top 1 bits (of 13) from FF cell top.$auto$ff.cc:266:slice$442 ($adffe).
Removed top 27 bits (of 32) from wire top.$flatten\adc_capture_inst.$add$adc_capture.sv:101$266_Y.
Removed top 27 bits (of 32) from wire top.$flatten\adc_capture_inst.$add$adc_capture.sv:38$253_Y.

3.15. Executing PEEPOPT pass (run peephole optimizers).

3.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

3.17. Executing SHARE pass (SAT-based resource sharing).

3.18. Executing TECHMAP pass (map to technology primitives).

3.18.1. Executing Verilog-2005 frontend: /home/dovk2003/oss-cad-suite/lib/../share/yosys/cmp2lut.v
Parsing Verilog input from `/home/dovk2003/oss-cad-suite/lib/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

3.18.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~88 debug messages>

3.19. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.20. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

3.21. Executing TECHMAP pass (map to technology primitives).

3.21.1. Executing Verilog-2005 frontend: /home/dovk2003/oss-cad-suite/lib/../share/yosys/mul2dsp.v
Parsing Verilog input from `/home/dovk2003/oss-cad-suite/lib/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

3.21.2. Executing Verilog-2005 frontend: /home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/dsp_map.v
Parsing Verilog input from `/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/dsp_map.v' to AST representation.
Generating RTLIL representation for module `\$__MUL18X18'.
Successfully finished Verilog frontend.

3.21.3. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~5 debug messages>

3.22. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module top:
  creating $macc model for $flatten\adc_capture_inst.$add$adc_capture.sv:101$266 ($add).
  creating $macc model for $flatten\adc_capture_inst.$add$adc_capture.sv:38$253 ($add).
  creating $macc model for $flatten\adc_capture_inst.$add$adc_capture.sv:91$264 ($add).
  creating $macc model for $flatten\adc_capture_inst.$sub$adc_capture.sv:46$254 ($sub).
  creating $macc model for $flatten\adc_capture_inst.$sub$adc_capture.sv:60$258 ($sub).
  creating $alu model for $macc $flatten\adc_capture_inst.$sub$adc_capture.sv:60$258.
  creating $alu model for $macc $flatten\adc_capture_inst.$sub$adc_capture.sv:46$254.
  creating $alu model for $macc $flatten\adc_capture_inst.$add$adc_capture.sv:91$264.
  creating $alu model for $macc $flatten\adc_capture_inst.$add$adc_capture.sv:38$253.
  creating $alu model for $macc $flatten\adc_capture_inst.$add$adc_capture.sv:101$266.
  creating $alu model for $flatten\adc_capture_inst.$ge$adc_capture.sv:31$249 ($ge): new $alu
  creating $alu model for $flatten\adc_capture_inst.$ge$adc_capture.sv:96$265 ($ge): new $alu
  creating $alu model for $flatten\adc_capture_inst.$lt$adc_capture.sv:59$257 ($lt): new $alu
  creating $alu cell for $flatten\adc_capture_inst.$lt$adc_capture.sv:59$257: $auto$alumacc.cc:495:replace_alu$461
  creating $alu cell for $flatten\adc_capture_inst.$ge$adc_capture.sv:96$265: $auto$alumacc.cc:495:replace_alu$466
  creating $alu cell for $flatten\adc_capture_inst.$ge$adc_capture.sv:31$249: $auto$alumacc.cc:495:replace_alu$479
  creating $alu cell for $flatten\adc_capture_inst.$add$adc_capture.sv:101$266: $auto$alumacc.cc:495:replace_alu$492
  creating $alu cell for $flatten\adc_capture_inst.$add$adc_capture.sv:38$253: $auto$alumacc.cc:495:replace_alu$495
  creating $alu cell for $flatten\adc_capture_inst.$add$adc_capture.sv:91$264: $auto$alumacc.cc:495:replace_alu$498
  creating $alu cell for $flatten\adc_capture_inst.$sub$adc_capture.sv:46$254: $auto$alumacc.cc:495:replace_alu$501
  creating $alu cell for $flatten\adc_capture_inst.$sub$adc_capture.sv:60$258: $auto$alumacc.cc:495:replace_alu$504
  created 8 $alu and 0 $macc cells.

3.23. Executing OPT pass (performing simple optimizations).

3.23.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.23.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

3.23.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

3.23.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

3.23.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

3.23.6. Executing OPT_DFF pass (perform DFF optimizations).

3.23.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

3.23.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.23.9. Rerunning OPT passes. (Maybe there is more to do..)

3.23.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

3.23.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

3.23.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

3.23.13. Executing OPT_DFF pass (perform DFF optimizations).

3.23.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

3.23.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.23.16. Finished OPT passes. (There is nothing left to do.)

3.24. Executing MEMORY pass.

3.24.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

3.24.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

3.24.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

3.24.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

3.24.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

3.24.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

3.24.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

3.24.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

3.24.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

3.24.10. Executing MEMORY_COLLECT pass (generating $mem cells).

3.25. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

3.26. Executing MEMORY_LIBMAP pass (mapping memories to cells).

3.27. Executing TECHMAP pass (map to technology primitives).

3.27.1. Executing Verilog-2005 frontend: /home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/lutrams_map.v
Parsing Verilog input from `/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/lutrams_map.v' to AST representation.
Generating RTLIL representation for module `\$__TRELLIS_DPR16X4_'.
Successfully finished Verilog frontend.

3.27.2. Executing Verilog-2005 frontend: /home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/brams_map.v
Parsing Verilog input from `/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ECP5_DP16KD_'.
Generating RTLIL representation for module `\$__ECP5_PDPW16KD_'.
Successfully finished Verilog frontend.

3.27.3. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~5 debug messages>

3.28. Executing OPT pass (performing simple optimizations).

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~11 debug messages>

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

3.28.3. Executing OPT_DFF pass (perform DFF optimizations).

3.28.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 26 unused wires.
<suppressed ~1 debug messages>

3.28.5. Finished fast OPT passes.

3.29. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

3.30. Executing OPT pass (performing simple optimizations).

3.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

3.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~6 debug messages>

3.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

3.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

3.30.6. Executing OPT_DFF pass (perform DFF optimizations).

3.30.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

3.30.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.30.9. Finished OPT passes. (There is nothing left to do.)

3.31. Executing TECHMAP pass (map to technology primitives).

3.31.1. Executing Verilog-2005 frontend: /home/dovk2003/oss-cad-suite/lib/../share/yosys/techmap.v
Parsing Verilog input from `/home/dovk2003/oss-cad-suite/lib/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu_brent_kung'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.31.2. Executing Verilog-2005 frontend: /home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/arith_map.v
Parsing Verilog input from `/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ecp5_alu'.
Successfully finished Verilog frontend.

3.31.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $eq.
Using template $paramod$20d3ee62d72123142eb855d7ddafd835e31ba009\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $reduce_or.
Using template $paramod$ba698a254f9a5947e85cbe7beae6b161eefc5386\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $mux.
Using template $paramod$672a140277c71df8314410f22acc08d55222c3c7\_80_ecp5_alu for cells of type $alu.
Using template $paramod$7e708ae28ab761f11d0fb59d3ffc72f6a4baf5d9\_90_alu for cells of type $alu.
Using template $paramod$d1615bf4e5e328245ffd1550e5fe105901cda77b\_90_alu for cells of type $alu.
Using template $paramod$constmap:d9584afa65fdcae32c93571a2f3bdcd04585d16c$paramod$724ca30713ca8aea2c8cc37cca71097000942a01\_90_shift_shiftx for cells of type $shiftx.
Using template $paramod$740b056ede97228d3eae64ea2fdc81f0a33e0fe7\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_lcu_brent_kung\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $logic_or.
Using extmapper simplemap for cells of type $logic_and.
Using template $paramod\_90_lcu_brent_kung\WIDTH=32'00000000000000000000000000000100 for cells of type $lcu.
No more expansions possible.
<suppressed ~804 debug messages>

3.32. Executing OPT pass (performing simple optimizations).

3.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~202 debug messages>

3.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~81 debug messages>
Removed a total of 27 cells.

3.32.3. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$919 ($_DFFE_NP0P_) from module top.

3.32.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 37 unused cells and 289 unused wires.
<suppressed ~38 debug messages>

3.32.5. Rerunning OPT passes. (Removed registers in this run.)

3.32.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.32.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

3.32.8. Executing OPT_DFF pass (perform DFF optimizations).

3.32.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

3.32.10. Finished fast OPT passes.

3.33. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

3.34. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

3.35. Executing TECHMAP pass (map to technology primitives).

3.35.1. Executing Verilog-2005 frontend: /home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_map.v
Parsing Verilog input from `/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFFE_NP0N_'.
Generating RTLIL representation for module `\$_SDFFE_NP1N_'.
Generating RTLIL representation for module `\$_SDFFE_PP0N_'.
Generating RTLIL representation for module `\$_SDFFE_PP1N_'.
Generating RTLIL representation for module `\$_ALDFF_NP_'.
Generating RTLIL representation for module `\$_ALDFF_PP_'.
Generating RTLIL representation for module `\$_ALDFFE_NPN_'.
Generating RTLIL representation for module `\$_ALDFFE_NPP_'.
Generating RTLIL representation for module `\$_ALDFFE_PPN_'.
Generating RTLIL representation for module `\$_ALDFFE_PPP_'.
Generating RTLIL representation for module `\FD1P3AX'.
Generating RTLIL representation for module `\FD1P3AY'.
Generating RTLIL representation for module `\FD1P3BX'.
Generating RTLIL representation for module `\FD1P3DX'.
Generating RTLIL representation for module `\FD1P3IX'.
Generating RTLIL representation for module `\FD1P3JX'.
Generating RTLIL representation for module `\FD1S3AX'.
Generating RTLIL representation for module `\FD1S3AY'.
Generating RTLIL representation for module `\FD1S3BX'.
Generating RTLIL representation for module `\FD1S3DX'.
Generating RTLIL representation for module `\FD1S3IX'.
Generating RTLIL representation for module `\FD1S3JX'.
Generating RTLIL representation for module `\IFS1P3BX'.
Generating RTLIL representation for module `\IFS1P3DX'.
Generating RTLIL representation for module `\IFS1P3IX'.
Generating RTLIL representation for module `\IFS1P3JX'.
Generating RTLIL representation for module `\OFS1P3BX'.
Generating RTLIL representation for module `\OFS1P3DX'.
Generating RTLIL representation for module `\OFS1P3IX'.
Generating RTLIL representation for module `\OFS1P3JX'.
Generating RTLIL representation for module `\IB'.
Generating RTLIL representation for module `\IBPU'.
Generating RTLIL representation for module `\IBPD'.
Generating RTLIL representation for module `\OB'.
Generating RTLIL representation for module `\OBZ'.
Generating RTLIL representation for module `\OBZPU'.
Generating RTLIL representation for module `\OBZPD'.
Generating RTLIL representation for module `\OBCO'.
Generating RTLIL representation for module `\BB'.
Generating RTLIL representation for module `\BBPU'.
Generating RTLIL representation for module `\BBPD'.
Generating RTLIL representation for module `\ILVDS'.
Generating RTLIL representation for module `\OLVDS'.
Successfully finished Verilog frontend.

3.35.2. Continuing TECHMAP pass.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using template \$_DFFE_PP1N_ for cells of type $_DFFE_PP1N_.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
No more expansions possible.
<suppressed ~103 debug messages>

3.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).

3.38. Executing LATTICE_GSR pass (implement FF init values).
Handling GSR in top.

3.39. Executing ATTRMVCP pass (move or copy attributes).

3.40. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 187 unused wires.
<suppressed ~1 debug messages>

3.41. Executing TECHMAP pass (map to technology primitives).

3.41.1. Executing Verilog-2005 frontend: /home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/latches_map.v
Parsing Verilog input from `/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

3.41.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

3.42. Executing ABC pass (technology mapping using ABC).

3.42.1. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Extracted 115 gates and 168 wires to a netlist network with 51 inputs and 29 outputs.

3.42.1.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + &get -n 
ABC: + &fraig -x 
ABC: + &put 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + dress <abc-temp-dir>/input.blif 
ABC: Total number of equiv classes                =      37.
ABC: Participating nodes from both networks       =      82.
ABC: Participating nodes from the first network   =      36. (  90.00 % of nodes)
ABC: Participating nodes from the second network  =      46. ( 115.00 % of nodes)
ABC: Node pairs (any polarity)                    =      36. (  90.00 % of names can be moved)
ABC: Node pairs (same polarity)                   =      33. (  82.50 % of names can be moved)
ABC: Total runtime =     0.01 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

3.42.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:       39
ABC RESULTS:        internal signals:       88
ABC RESULTS:           input signals:       51
ABC RESULTS:          output signals:       29
Removing temp directory.
Removed 0 unused cells and 120 unused wires.

3.43. Executing TECHMAP pass (map to technology primitives).

3.43.1. Executing Verilog-2005 frontend: /home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_map.v
Parsing Verilog input from `/home/dovk2003/oss-cad-suite/lib/../share/yosys/ecp5/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFFE_NP0N_'.
Generating RTLIL representation for module `\$_SDFFE_NP1N_'.
Generating RTLIL representation for module `\$_SDFFE_PP0N_'.
Generating RTLIL representation for module `\$_SDFFE_PP1N_'.
Generating RTLIL representation for module `\$_ALDFF_NP_'.
Generating RTLIL representation for module `\$_ALDFF_PP_'.
Generating RTLIL representation for module `\$_ALDFFE_NPN_'.
Generating RTLIL representation for module `\$_ALDFFE_NPP_'.
Generating RTLIL representation for module `\$_ALDFFE_PPN_'.
Generating RTLIL representation for module `\$_ALDFFE_PPP_'.
Generating RTLIL representation for module `\FD1P3AX'.
Generating RTLIL representation for module `\FD1P3AY'.
Generating RTLIL representation for module `\FD1P3BX'.
Generating RTLIL representation for module `\FD1P3DX'.
Generating RTLIL representation for module `\FD1P3IX'.
Generating RTLIL representation for module `\FD1P3JX'.
Generating RTLIL representation for module `\FD1S3AX'.
Generating RTLIL representation for module `\FD1S3AY'.
Generating RTLIL representation for module `\FD1S3BX'.
Generating RTLIL representation for module `\FD1S3DX'.
Generating RTLIL representation for module `\FD1S3IX'.
Generating RTLIL representation for module `\FD1S3JX'.
Generating RTLIL representation for module `\IFS1P3BX'.
Generating RTLIL representation for module `\IFS1P3DX'.
Generating RTLIL representation for module `\IFS1P3IX'.
Generating RTLIL representation for module `\IFS1P3JX'.
Generating RTLIL representation for module `\OFS1P3BX'.
Generating RTLIL representation for module `\OFS1P3DX'.
Generating RTLIL representation for module `\OFS1P3IX'.
Generating RTLIL representation for module `\OFS1P3JX'.
Generating RTLIL representation for module `\IB'.
Generating RTLIL representation for module `\IBPU'.
Generating RTLIL representation for module `\IBPD'.
Generating RTLIL representation for module `\OB'.
Generating RTLIL representation for module `\OBZ'.
Generating RTLIL representation for module `\OBZPU'.
Generating RTLIL representation for module `\OBZPD'.
Generating RTLIL representation for module `\OBCO'.
Generating RTLIL representation for module `\BB'.
Generating RTLIL representation for module `\BBPU'.
Generating RTLIL representation for module `\BBPD'.
Generating RTLIL representation for module `\ILVDS'.
Generating RTLIL representation for module `\OLVDS'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

3.43.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10111111 for cells of type $lut.
Using template $paramod$2765ae4d638ce8187b1812db5701084919d6594e\$lut for cells of type $lut.
Using template $paramod$272652f6c6fbe9a75eff76e45cc7e2788835518b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010000 for cells of type $lut.
Using template $paramod$f9b715fbf1040e81e900b2461c2390d17ed5e988\$lut for cells of type $lut.
Using template $paramod$99afb32cdd38d0e352103ca805bf0974f1c31850\$lut for cells of type $lut.
Using template $paramod$10b0fe3049cfd7e6d38533387eb2b0cfded868cf\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0100 for cells of type $lut.
Using template $paramod$571404c0889eaf57f492cb5e37f8acb5df5852f9\$lut for cells of type $lut.
Using template $paramod$8adf7fbd410d2cc654c288d5be5f7508ee8809b0\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000001\LUT=2'01 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01001111 for cells of type $lut.
No more expansions possible.
<suppressed ~306 debug messages>

3.44. Executing OPT_LUT_INS pass (discard unused LUT inputs).
Optimizing LUTs in top.
  Optimizing lut $abc$1415$auto$blifparse.cc:535:parse_blif$1425.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$1415$auto$blifparse.cc:535:parse_blif$1427.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$1415$auto$blifparse.cc:535:parse_blif$1430.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$1415$auto$blifparse.cc:535:parse_blif$1433.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$1415$auto$blifparse.cc:535:parse_blif$1440.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
Removed 0 unused cells and 83 unused wires.

3.45. Executing AUTONAME pass.
Renamed 459 objects in module top (16 iterations).
<suppressed ~142 debug messages>

3.46. Executing HIERARCHY pass (managing design hierarchy).
Attribute `top' found on module `top'. Setting top module to top.

3.46.1. Analyzing design hierarchy..
Top module:  \top

3.46.2. Analyzing design hierarchy..
Top module:  \top
Removed 0 unused modules.

3.47. Printing statistics.

=== top ===

   Number of wires:                 85
   Number of wire bits:            204
   Number of public wires:          85
   Number of public wire bits:     204
   Number of ports:                  8
   Number of port bits:             17
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 91
     $scopeinfo                      1
     CCU2C                           9
     LUT4                           44
     PFUMX                           5
     TRELLIS_FF                     32

3.48. Executing CHECK pass (checking for obvious problems).
Checking module top...
Found and reported 0 problems.

3.49. Executing JSON backend.

End of script. Logfile hash: e85d4298ed, CPU: user 0.54s system 0.01s, MEM: 27.35 MB peak
Yosys 0.50+7 (git sha1 38f858374, clang++ 18.1.8 -fPIC -O3)
Time spent: 40% 16x read_verilog (0 sec), 14% 1x abc (0 sec), ...
